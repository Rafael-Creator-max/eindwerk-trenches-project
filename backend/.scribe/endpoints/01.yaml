name: 'Cryptocurrency Management'
description: |-

  APIs for managing cryptocurrencies and user interactions with them
endpoints:
  -
    httpMethods:
      - GET
    uri: api/cryptocurrencies
    metadata:
      groupName: 'Cryptocurrency Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get List of All Cryptocurrencies'
      description: |-
        Returns a paginated list of all cryptocurrencies with their current market data.
        Results are ordered by market cap (descending) and cached for 5 minutes to improve performance.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      page:
        name: page
        description: 'The page number to return.'
        required: false
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      per_page:
        name: per_page
        description: 'Number of items per page. Default: 15.'
        required: false
        example: 20
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      vs_currency:
        name: vs_currency
        description: 'The target currency of market data. Default: usd.'
        required: false
        example: eur
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      order:
        name: order
        description: 'The field to order by. Default: market_cap_desc.'
        required: false
        example: volume_desc
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      sparkline:
        name: sparkline
        description: 'Include sparkline 7d data. Default: false.'
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      price_change_percentage:
        name: price_change_percentage
        description: 'Include price change percentage. Comma-separated values.'
        required: false
        example: '1h,24h,7d'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      page: 1
      per_page: 20
      vs_currency: eur
      order: volume_desc
      sparkline: true
      price_change_percentage: '1h,24h,7d'
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "data": [
              {
                "id": 1,
                "asset_type_id": 1,
                "symbol": "BTC",
                "name": "Bitcoin",
                "slug": "bitcoin",
                "external_id": "bitcoin",
                "current_price": 50000.00,
                "market_cap": 1000000000000.00,
                "market_cap_rank": 1,
                "total_volume": 50000000000.00,
                "high_24h": 51000.00,
                "low_24h": 49000.00,
                "price_change_24h": 1000.00,
                "price_change_percentage_24h": 2.04,
                "market_cap_change_24h": 20000000000.00,
                "market_cap_change_percentage_24h": 2.04,
                "circulating_supply": 18796831.0,
                "total_supply": 21000000.0,
                "max_supply": 21000000.0,
                "ath": 69045.00,
                "ath_change_percentage": -27.59,
                "ath_date": "2021-11-10T14:24:11.849Z",
                "atl": 67.81,
                "atl_change_percentage": 73630.19,
                "atl_date": "2013-07-06T00:00:00.000Z",
                "last_updated": "2023-01-01T12:00:00.000Z",
                "price_change_percentage_1h_in_currency": 0.1,
                "price_change_percentage_24h_in_currency": 2.04,
                "price_change_percentage_7d_in_currency": -5.24,
                "image": "https://assets.coingecko.com/coins/images/1/large/bitcoin.png",
                "roi": null,
                "sparkline_in_7d": {
                  "price": [
                    50000.00, 50200.00, 50100.00, 50300.00, 50400.00
                  ]
                }
                "price_change_24h": "2.50000000",
                "created_at": "2023-01-01T00:00:00.000000Z",
                "updated_at": "2023-01-01T00:00:00.000000Z"
              },
              ...
            ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/cryptocurrencies/{id}'
    metadata:
      groupName: 'Cryptocurrency Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Unfollow a Cryptocurrency'
      description: |-
        Allows the authenticated user to unfollow a specific cryptocurrency.
        Requires authentication via Bearer token.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The slug or id of the cryptocurrency.'
        required: true
        example: bitcoin
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: bitcoin
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Successfully unfollowed cryptocurrency"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: |-
          {
            "data": {
              "id": 1,
              "asset_type_id": 1,
              "symbol": "BTC",
              "name": "Bitcoin",
              "slug": "bitcoin",
              "external_id": "bitcoin",
              "current_price": "50000.00000000",
              "market_cap": "1000000000000.00",
              "volume_24h": "50000000000.00",
              "price_change_24h": "2.50000000",
              "created_at": "2023-01-01T00:00:00.000000Z",
              "updated_at": "2023-01-01T00:00:00.000000Z",
              "asset_type": {
                "id": 1,
                "name": "Cryptocurrency",
                "description": "Digital or virtual currency that uses cryptography for security",
                "created_at": "2023-01-01T00:00:00.000000Z",
                "updated_at": "2023-01-01T00:00:00.000000Z"
              },
              "followers": []
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
            "message": "Unauthenticated."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "Cryptocurrency not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/cryptocurrencies/{id}/chart'
    metadata:
      groupName: 'Cryptocurrency Management'
      groupDescription: |-

        APIs for managing cryptocurrencies and user interactions with them
      subgroup: ''
      subgroupDescription: ''
      title: 'Get price history for a cryptocurrency'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the cryptocurrency.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "data": {
              "prices": [[timestamp, price], ...],
              "market_caps": [[timestamp, market_cap], ...],
              "total_volumes": [[timestamp, volume], ...]
            },
            "crypto_id": 1,
            "symbol": "BTC",
            "name": "Bitcoin"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: |-
          {
            "data": {
              "prices": [],
              "market_caps": [],
              "total_volumes": []
            },
            "message": "No price data available",
            "crypto_id": 1,
            "symbol": "BTC"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/cryptocurrencies/{id}/price-history'
    metadata:
      groupName: 'Cryptocurrency Management'
      groupDescription: |-

        APIs for managing cryptocurrencies and user interactions with them
      subgroup: ''
      subgroupDescription: ''
      title: 'Get price history for a cryptocurrency'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the cryptocurrency.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "data": {
              "prices": [[timestamp, price], ...],
              "market_caps": [[timestamp, market_cap], ...],
              "total_volumes": [[timestamp, volume], ...]
            },
            "crypto_id": 1,
            "symbol": "BTC",
            "name": "Bitcoin"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: |-
          {
            "data": {
              "prices": [],
              "market_caps": [],
              "total_volumes": []
            },
            "message": "No price data available",
            "crypto_id": 1,
            "symbol": "BTC"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
