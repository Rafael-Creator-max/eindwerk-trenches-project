name: 'User Actions'
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: 'api/cryptocurrencies/{id}/follow'
    metadata:
      groupName: 'User Actions'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Follow a Cryptocurrency'
      description: |-
        Allows the authenticated user to follow a specific cryptocurrency.
        Requires authentication via Bearer token.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the cryptocurrency.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      cryptocurrency:
        name: cryptocurrency
        description: 'The slug of the cryptocurrency to follow.'
        required: true
        example: bitcoin
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: architecto
      cryptocurrency: bitcoin
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Successfully followed cryptocurrency"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
            "message": "Unauthenticated."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "No query results for model [App\\Models\\Cryptocurrency]"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/cryptocurrencies/{id}/follow'
    metadata:
      groupName: 'User Actions'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Unfollow a Cryptocurrency'
      description: |-
        Allows the authenticated user to unfollow a specific cryptocurrency.
        Requires authentication via Bearer token.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The slug or id of the cryptocurrency to unfollow.'
        required: true
        example: bitcoin
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: bitcoin
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Successfully unfollowed cryptocurrency"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
            "message": "Unauthenticated."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
            "message": "No query results for model [App\\Models\\Cryptocurrency]"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/user/cryptocurrencies
    metadata:
      groupName: 'User Actions'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: "Get User's Followed Cryptocurrencies"
      description: |-
        Returns a list of all cryptocurrencies that the authenticated user is following.
        Requires authentication via Bearer token.
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          [
            {
              "id": 1,
              "asset_type_id": 1,
              "symbol": "BTC",
              "name": "Bitcoin",
              "slug": "bitcoin",
              "external_id": "bitcoin",
              "current_price": "50000.00000000",
              "market_cap": "1000000000000.00",
              "volume_24h": "50000000000.00",
              "price_change_24h": "2.50000000",
              "created_at": "2023-01-01T00:00:00.000000Z",
              "updated_at": "2023-01-01T00:00:00.000000Z",
              "pivot": {
                "user_id": 1,
                "cryptocurrency_id": 1
              },
              "asset_type": {
                "id": 1,
                "name": "Cryptocurrency",
                "description": "Digital or virtual currency that uses cryptography for security",
                "created_at": "2023-01-01T00:00:00.000000Z",
                "updated_at": "2023-01-01T00:00:00.000000Z"
              }
            }
          ]
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
            "message": "Unauthenticated."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
